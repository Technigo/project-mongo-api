// $gte is MongoDB's comparison query operator for greater or equal to
"Await" is, alike .then, a way of dealing with promises. 

danceability
Danceability describes how suitable a track is for dancing based on a combination 
of musical elements including tempo, rhythm stability, beat strength, and overall 
regularity. A value of 0.0 is least danceable and 1.0 is most danceable.


valence
A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. 
Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while 
tracks with low valence sound more negative (e.g. sad, depressed, angry).


app.get("/dance/:danceability", async(req,res) => {
  try{
    const dancePoints= await Song.find({ danceability: req.params.danceability});
    if(dancePoints) {
      res.status(200).json({
      data: dancePoints,
      success: true, 
    }) 
  } else{
    res.status(404).json({
      error: ' Song not found, try again ',
      success: false, 
    })
  }
  }catch(err) {
    res.status(400).json({ error: "invalied BPM number" })
  }
})

// Return a specific genere 
app.get("/songs/genre/:genre", async (req, res) => {
  try{
    const singleGenre = await Song.find({ genre: req.params.genre });
    if (singleGenre) {
      res.status(200).json({
      data: singleGenre,
      success: true, 
    })
    } else {
      res.status(404).json({
        error: ' Genre not found, try again ',
        success: false, 
      })
    }
  }
  catch(err) {
    res.status(400).json({ error: "invalied songname" })
  } 
})

